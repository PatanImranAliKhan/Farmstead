{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./http-error-message.service\";\nexport let TransportService = /*#__PURE__*/(() => {\n  var _class;\n  class TransportService {\n    constructor(http, HttpErrorMsg) {\n      this.http = http;\n      this.HttpErrorMsg = HttpErrorMsg;\n      this.url1 = \"http://localhost:2500/agritransport\";\n      this.url2 = \"http://localhost:2500/aquatransport\";\n    }\n    getAllAgriTransportData() {\n      return this.http.get(`${this.url1}/results`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    getAllAquaTransportData() {\n      return this.http.get(`${this.url2}/results`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    postAgriTransport(data) {\n      return this.http.post(`${this.url1}/addData`, data).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    postAquaTransport(data) {\n      return this.http.post(`${this.url2}/addData`, data).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    deleteAgriData(id) {\n      return this.http.delete(`${this.url1}/delete/${id}`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    deleteAquaData(id) {\n      return this.http.delete(`${this.url2}/delete/${id}`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    GetAgriTransportData(username, email) {\n      return this.http.get(`${this.url1}/getTransportData/${username}/${email}`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    GetAquaTransportData(username, email) {\n      return this.http.get(`${this.url2}/getTransportData/${username}/${email}`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n  }\n  _class = TransportService;\n  _class.ɵfac = function TransportService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorMessageService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return TransportService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}