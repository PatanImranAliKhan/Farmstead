{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./http-error-message.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthorizationService = /*#__PURE__*/(() => {\n  var _class;\n  class AuthorizationService {\n    constructor(http, HttpErrorMsg, router) {\n      this.http = http;\n      this.HttpErrorMsg = HttpErrorMsg;\n      this.router = router;\n      this.user = null;\n      this.agriculture = null;\n      this.aquaculture = null;\n      this.citizen = null;\n      this.url = \"http://localhost:2500\";\n    }\n    addUser(user, type) {\n      return this.http.post(`${this.url}/${type}/adduser`, user).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    getresponce(type) {\n      return this.http.get(`${this.url}/${type}/results`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    deleteUser(user, type) {\n      return this.http.delete(`${this.url}/${type}/delete/${user.username}`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    updateUser(user, type) {\n      return this.http.put(`${this.url}/${type}/update/${user.id}`, user).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    getUser(user, pass, type) {\n      return this.http.get(`${this.url}/${type}/getuser/${user}/${pass}`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    loggedin() {\n      return !!localStorage.getItem('token');\n    }\n    logoutUser() {\n      localStorage.removeItem('token');\n      this.router.navigate(['']);\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    updateCart(type, cart) {\n      return this.http.put(`${this.url}/${type}/updateCart/${cart.id}`, cart).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    RequestWater(user) {\n      return this.http.post(`${this.url}/waterReq/addRequest`, user).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    GetWaterRequests() {\n      return this.http.get(`${this.url}/waterReq/getRequests`).pipe(catchError(this.HttpErrorMsg.handleError));\n    }\n    updateLocalUser(details) {\n      const object = {\n        token: details.token,\n        resp: details.resp\n      };\n      localStorage.setItem('token', JSON.stringify(object));\n    }\n    updateLocalUserByRemoving(resp) {\n      const detail = JSON.parse(localStorage.getItem('token'));\n      const object = {\n        token: detail.token,\n        resp: resp\n      };\n      localStorage.setItem('token', JSON.stringify(object));\n    }\n  }\n  _class = AuthorizationService;\n  _class.ɵfac = function AuthorizationService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorMessageService), i0.ɵɵinject(i3.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthorizationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}